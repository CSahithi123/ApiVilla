@page "/addvillalist"

<h3>Add Villa</h3>
@using MudBlazor
@using MudBlazor.Interfaces
@using ViewModels
@inject MyBlazorApp.Services.IBlazorService service
@inject NavigationManager navigate



@* <MudFileUpload T="IBrowserFile" FilesChanged="UploadFiles">
    <ButtonTemplate>
        <MudFab HtmlTag="label"
                Color="Color.Secondary"
                Icon="@Icons.Material.Filled.Image"
                Label="Load picture"
                @bind-Value="newVilla.ImageUrl"
                for="@context.Id"/>
    </ButtonTemplate>
</MudFileUpload> *@

<EditForm Model="@newVilla" OnSubmit="AddNewVilla">

    <DataAnnotationsValidator />
    <MudGrid>
        <MudItem xs="12" sm="7">
            <MudCard>
                <MudCardContent>
                    <MudTextField Label="Villa Name" HelperText="Villa Name"
                                  @bind-Value="newVilla.Name" For="@(() => newVilla.Name)" InputType="InputType.Text" />

                    <MudTextField HideSpinButtons="true" @bind-Value="newVilla.Price" Label="Price" HelperText="Villa Price" For="@(() => newVilla.Price)" Variant="Variant.Text" />
                    <MudTextField Label="Description" HelperText="Description"
                                  @bind-Value="newVilla.Description" For="@(() => newVilla.Description)" InputType="InputType.Text" />
                    <MudTextField Label="Sqft" HelperText="Sqft"
                                  @bind-Value="newVilla.Sqft" For="@(() => newVilla.Sqft)" InputType="InputType.Text" />
                    <MudTextField Label="Occupancy" HelperText="Occupancy"
                                  @bind-Value="newVilla.Occupancy" For="@(() => newVilla.Occupancy)" InputType="InputType.Text" />
                    <MudTextField Label="ImageUrl" HelperText="Image"
                                  @bind-Value="newVilla.ImageUrl" For="@(() => newVilla.ImageUrl)" InputType="InputType.Text" />

                    @* <MudFileUpload T="IBrowserFile" FilesChanged="UploadFiles">
                            <MudFab HtmlTag="label"
                                    Color="Color.Secondary"
                                    Icon="@Icons.Material.Filled.Image"
                                    Label="Load picture"
                                     />
                    </MudFileUpload> *@


                </MudCardContent>
                <MudCardActions>
                    <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto">Add Villa</MudButton>
                </MudCardActions>
            </MudCard>
        </MudItem>
    </MudGrid>
</EditForm>

@* @if (files != null)
{
    <MudText Typo="@Typo.h6">@files.Count() File@(files.Count() == 1 ? "" : "s"):</MudText>
    <MudList>
        @foreach (var file in files)
        {
            <MudListItem Icon="@Icons.Material.Filled.AttachFile" @key="@file">
                @file.Name <code>@file.Size bytes</code>
            </MudListItem>
        }
    </MudList>
} *@




@code {
    private VillaVM newVilla = new VillaVM();//initialize newproduct of type ProductVM to represent product added
    // IList<IBrowserFile> files = new List<IBrowserFile>();
    // private void UploadFiles(IBrowserFile file)
    // {
    //    files.Add(file);
    //     //TODO upload the files to the server
    // }

    private async Task AddNewVilla()
    {



        int villaId = await service.Add(newVilla);//calls add method on inject service to add component

        navigate.NavigateTo("/villalist");//once added navigate to table

    }




}
